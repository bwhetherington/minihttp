{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55],"program":"/Users/benhetherington/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tempdir","/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4f16ce964fa736e3","-C","extra-filename=-4f16ce964fa736e3","--out-dir","/Users/benhetherington/workspaces/rust/minihttp/target/rls/debug/deps","-L","dependency=/Users/benhetherington/workspaces/rust/minihttp/target/rls/debug/deps","--extern","rand=/Users/benhetherington/workspaces/rust/minihttp/target/rls/debug/deps/librand-a0a53e993cb72371.rmeta","--extern","remove_dir_all=/Users/benhetherington/workspaces/rust/minihttp/target/rls/debug/deps/libremove_dir_all-c861ed024dff0897.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/benhetherington/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,119,111,114,107,115,112,97,99,101,115,47,114,117,115,116,47,109,105,110,105,104,116,116,112,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,116,101,109,112,100,105,114,45,52,102,49,54,99,101,57,54,52,102,97,55,51,54,101,51,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"tempdir","disambiguator":[4927525780895100212,13256499556721116251]},"crate_root":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src","external_crates":[{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16127014926937644840,10617917418627549874]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16744842085366098991,10021575423373849340]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12219308825194572396,1593244597194478439]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7720465312014950334,11982745657479504049]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11777904974825780541,8937117351976831060]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15945735692096346127,1348883009948969371]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10033866232596031485,2828804971217722296]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[3105781163621059830,14714552640967562592]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[16569648819360698606,17003220646964807291]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[2023344073335283670,3652609272169039894]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":11,"id":{"name":"rand","disambiguator":[12442593831006341083,10120453376580415130]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[10325017962988199402,14592140999844255021]}},{"file_name":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","num":13,"id":{"name":"remove_dir_all","disambiguator":[8986522666565581262,10504326873761095611]}}],"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":467,"byte_end":12817,"line_start":11,"line_end":356,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":467,"byte_end":12817,"line_start":11,"line_end":356,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/benhetherington/.cargo/registry/src/github.com-1ecc6299db9ec823/tempdir-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":66}],"decl_id":null,"docs":" Temporary directories of files.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4783,"byte_end":4790,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"TempDir","qualname":"::TempDir","value":"TempDir {  }","parent":null,"children":[{"krate":0,"index":19}],"decl_id":null,"docs":" A directory in the filesystem that is automatically deleted when\n it goes out of scope.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6391,"byte_end":6394,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"new","qualname":"<TempDir>::new","value":"fn (prefix: &str) -> io::Result<TempDir>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a temporary directory inside of `env::temp_dir()` whose\n name will have the prefix, `prefix`. The directory and\n everything inside it will be automatically deleted once the\n returned `TempDir` is destroyed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7444,"byte_end":7450,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"new_in","qualname":"<TempDir>::new_in","value":"fn <P> (tmpdir: P, prefix: &str) -> io::Result<TempDir>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a temporary directory inside of `tmpdir`\n whose name will have the prefix `prefix`. The directory and\n everything inside it will be automatically deleted once the\n returned `TempDir` is destroyed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9525,"byte_end":9529,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"path","qualname":"<TempDir>::path","value":"fn (&self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Accesses the [`Path`] to the temporary directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10396,"byte_end":10405,"line_start":280,"line_end":280,"column_start":12,"column_end":21},"name":"into_path","qualname":"<TempDir>::into_path","value":"fn (mut self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the [`Path`] contained in the `TempDir` and\n returns it. This destroys the `TempDir` without deleting the\n directory represented by the returned `Path`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12102,"byte_end":12107,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"close","qualname":"<TempDir>::close","value":"fn (mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Closes and removes the temporary directory, returing a `Result`.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5316,"byte_end":5323,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12331,"byte_end":12338,"line_start":335,"line_end":335,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12422,"byte_end":12429,"line_start":341,"line_end":341,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12611,"byte_end":12618,"line_start":349,"line_end":349,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5316,"byte_end":5323,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12331,"byte_end":12338,"line_start":335,"line_end":335,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12422,"byte_end":12429,"line_start":341,"line_end":341,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":40},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,85,115,101,114,115,47,98,101,110,104,101,116,104,101,114,105,110,103,116,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,101,109,112,100,105,114,45,48,46,51,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12611,"byte_end":12618,"line_start":349,"line_end":349,"column_start":15,"column_end":22},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":40},"to":{"krate":2,"index":1992}}]}